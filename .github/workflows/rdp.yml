name: Github-Remote-Desktop

on: workflow_dispatch

jobs:
  REMOTE:
    runs-on: windows-latest
    steps:
    - name: Modify Registry
      run: |
        REG ADD "HKEY_LOCAL_MACHINE\SOFTWARE\AppVeyor\Build Agent\State" /V GetSources /T REG_SZ /D true /F
    - name: Download Ngrok
      run: |
        iex ((new-object net.webclient).DownloadString('https://github.com/NightFall-Dev/potential-lamp/raw/main/ci/scripts/enable-rdp.ps1'))
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok-v3-stable-windows-amd64.zip
        7z x "ngrok-v3-stable-windows-amd64.zip"
      env:
       RDP_PASSWORD: ${{ secrets.RDP_PASSWORD }}
    - name: Authorize NGROK
      run: ngrok config add-authtoken $env:NGROK_AUTH_TOKEN --config config.yml
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Download Files
      run: |
        Invoke-WebRequest https://github.com/NightFall-Dev/potential-lamp/raw/main/Files/NGROK-AP.bat -OutFile NGROK-AP.bat
        Invoke-WebRequest https://github.com/NightFall-Dev/potential-lamp/raw/main/Files/NGROK-CHECK.bat -OutFile NGROK-CHECK.bat
    - name: Generate YML file for NGROK
      run: start NGROK-AP.bat
    - name: Enable Access
      run: | 
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - name: Create Tunnel
      run: .\ngrok start --all --config config.yml
    - name: Connection Instructions
      run: cmd /c NGROK-CHECK.bat
    - name: Complete (checking status)
      run: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://github.com/NightFall-Dev/potential-lamp/raw/main/ci/scripts/enable-rdp.ps1'))
      shell: powershell
      env:
       RDP_PASSWORD: ${{ secrets.RDP_PASSWORD }}

